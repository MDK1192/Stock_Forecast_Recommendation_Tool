#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(shinydashboard)
library(ggplot2)
library(plotly)
library(xts)
library(zoo)
library(quantmod)
library(Quandl)
library(forecast)
#library(RCrawler)
library(DT)
library(rvest)
library(data.table)
library(imputeTS)
library(tsibble)
library(TTR)

source("modules/import_data.R")
source("modules/module2.R")
source("modules/module3.R")


ui <- dashboardPage(
    #Header Content
    dashboardHeader(title = "Stock Recommendation Dashboard"),
    #Sidebar Content
    dashboardSidebar(
        sidebarMenu(
            menuItem("Aktien", tabName = "aktien", icon = icon("th")),
            menuItem("Forecast", tabName = "forecast", icon = icon("th")),
            menuItem("Recommendation", tabName = "recommendation", icon = icon("th")),
            menuItem("Trades", tabName = "trades", icon = icon("th")),
            menuItem("Kursindikator", tabName = "kursindikator", icon = icon("th"))
        )
    ),
    #Body Content
    dashboardBody(
        tabItems(
            tabItem(tabName = "aktien",
                    h2("Aktien Uebersicht"),
                    box(width = 12,
                        box(width = 3, dateRangeInput("dates", label = h3("Date range"))),
                        box(width = 6,radioButtons("radio", label = h3("Radio buttons"),
                                     choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3), 
                                     selected = 1)),
                        box(width = 3, actionButton("loader", label = "Load Stockdata"))
                    ),
                      
                    box(width = 12,
                        box(width = 8, plotlyOutput("plot1"),title = "Kursuebersicht grafisch"),
                        box(width = 4,DTOutput("stockTable"),title = "Kursuebersicht tabellarisch")
                    ),
            ),
            tabItem(tabName = "forecast",
                    h2("Forecast"),
                    box(width = 12,plotlyOutput("placeholder3"),title = "Forecasts grafisch"),
                    box(width = 12,DTOutput("placeholder4"),title = "Fehlerausgabe")
            ),
            tabItem(tabName = "recommendation",
                    h2("Recommendation"),
                    box(width = 12,DTOutput("placeholder5"),title = "Boersenblog1 tabellarisch"),
                    box(width = 12,DTOutput("placeholder6"),title = "Boersenblog2 tabellarisch"),
                    box(width = 12,DTOutput("placeholder7"),title = "Boersenblog3 tabellarisch")
            ),
            tabItem(tabName = "trades",
                    h2("Trades"),
                    box(width = 12,DTOutput("placeholder8"),title = "Fehlerausgabe")
            ),
            tabItem(tabName = "kursindikator",
                    h2("Kursindikatoren"),
                    tabBox(
                      title = "First tabBox",
                      # The id lets us use input$tabset1 on the server to find the current tab
                      id = "tabset1",
                      tabPanel("Tab1", "Tab content 1"),
                      tabPanel("Tab2", "Tab content 2")
                    )
            )

        )
    )
)

#server/logic content
server <- function(input, output, session) {

  observeEvent(input$loader, {
    
    import_stockdata(input$dates)
    browser()
    output$stockTable <- renderDataTable(data,options= list(scrollY = TRUE,pageLength = 5))
    browser()
    output$plot1 <- renderPlotly({
      
      
      plot_ly(data_plot, x = ~Date, y = ~AACG.Adjusted, type = 'scatter', mode = 'lines', 
              line = list(color = "rgb(0, 0, 0)")) %>%
        layout(title = "Date",
               xaxis = list(title = "Date",
                            zeroline = FALSE),
               yaxis = list(title = "Price",
                            zeroline = FALSE))
    })

    
  })

}

shinyApp(ui, server)